before:
  hooks:
    - go mod tidy
    - go install github.com/gobuffalo/packr/v2/packr2@v2.8.3
    - packr2
    - go generate ./...

builds:
- env:
  - CGO_ENABLED=0
  goos:
    - linux
    - darwin
    - windows
  goarch:
    - "386"
    - amd64
    - arm
    - arm64

archives:
- 
  id: tango-archive
  replacements:
    windows: Windows
    linux: Linux
    darwin: macOS
    amd64: 64-bit
    386: 32-bit
  format: zip

checksum:
  name_template: "{{ .ProjectName }}-{{ .Tag }}-checksums.txt"

snapshot:
  name_template: "{{ .ProjectName }}-{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
    - '^doc:'
    - '^test:'
    - Merge pull request
    - Merge branch

release:
  github:
    owner: roma-glushko
    name: tango
  prerelease: auto
  # You can change the name of the GitHub release.
  # Default is `{{.Tag}}`
  name_template: "{{.ProjectName}}-v{{.Version}}"
  disable: false

brews:
  -
    # Name template of the recipe
    # Default to project name
    name: tango

    # IDs of the archives to use.
    # Defaults to all.
    ids:
    - tango-archive

    # NOTE: make sure the url_template, the token and given repo (github or gitlab) owner and name are from the
    # same kind. We will probably unify this in the next major version like it is done with scoop.

    # Github repository to push the tap to.
    tap:
      owner: roma-glushko
      name: homebrew-tango

    # Template for the url which is determined by the given Token (github or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/uploads/{{ .ArtifactUploadHash }}/{{ .ArtifactName }}"
    url_template: "https://github.com/roma-glushko/tango/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: tango-release-bot
      email: roman.glushko.m@gmail.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    caveats: "Tango is on the scene ðŸŽ‰ Type `tango --help` to get started ðŸ’ƒðŸ’ƒðŸ’ƒ"

    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/roma-glushko/tango"

    # Your app's description.
    # Default is empty.
    description: "Tango is a command-line tool for dancing with access logs"

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    custom_block: head "https://github.com/roma-glushko/tango.git"

    # Packages your package depends on.
    dependencies: []

    # Packages that conflict with your package.
    conflicts: []

    plist: '' 

    # So you can `brew test` your formula.
    # Default is empty.
    test: system "#{bin}/tango --version"

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    install: bin.install "tango"

snapcrafts:
  -
    # ID of the snapcraft config, must be unique.
    # Defaults to "default".
    id: tango-snapcraft

    # You can change the name of the package.
    # Default: `{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}`
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

    # Replacements for GOOS and GOARCH in the package name.
    # Keys should be valid GOOSs or GOARCHs.
    # Values are the respective replacements.
    # Default is empty.
    replacements:
      amd64: 64-bit
      386: 32-bit
      darwin: macOS
      linux: Linux

    # The name of the snap. This is optional.
    # Default is project name.
    name: tango

    # Wether to publish the snap to the snapcraft store.
    # Remember you need to `snapcraft login` first.
    # Defaults to false.
    publish: true

    # Single-line elevator pitch for your amazing snap.
    # 79 char long at most.
    summary: "Command-line tool for dancing with access logs"

    # This the description of your snap. You have a paragraph or two to tell the
    # most important story about your snap. Keep it under 100 words though,
    # we live in tweetspace and your description wants to look good in the snap
    # store.
    description: Tango is a dependency-free command-line tool for analyzing server access logs

    # A guardrail to prevent you from releasing a snap to all your users before
    # it is ready.
    # `devel` will let you release only to the `edge` and `beta` channels in the
    # store. `stable` will let you release also to the `candidate` and `stable`
    # channels. More info about channels here:
    # https://snapcraft.io/docs/reference/channels
    grade: stable

    # Snaps can be setup to follow three different confinement policies:
    # `strict`, `devmode` and `classic`. A strict confinement where the snap
    # can only read and write in its own namespace is recommended. Extra
    # permissions for strict snaps can be declared as `plugs` for the app, which
    # are explained later. More info about confinement here:
    # https://snapcraft.io/docs/reference/confinement
    confinement: strict

    # Your app's license, based on SPDX license expressions: https://spdx.org/licenses
    # Default is empty.
    license: MIT

    # A snap of type base to be used as the execution environment for this snap.
    # Valid values are:
    # * bare - Empty base snap;
    # * core - Ubuntu Core 16;
    # * core18 - Ubuntu Core 18.
    # Default is empty.
    base: core18

    # Each binary built by GoReleaser is an app inside the snap. In this section
    # you can declare extra details for those binaries. It is optional.
    apps:

      # The name of the app must be the same name as the binary built or the snapcraft name.
      tango:
        command: tango

        # If your app requires extra permissions to work outside of its default
        # confined space, declare them here.
        # You can read the documentation about the available plugs and the
        # things they allow:
        # https://snapcraft.io/docs/reference/interfaces.
        plugs: ["home", "network"]
scoop:
  url_template: "https://github.com/roma-glushko/tango/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

  # Repository to push the app manifest to.
  bucket:
    owner: roma-glushko
    name: scoop-tango

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: tango-release-bot
    email: roman.glushko.m@gmail.com

  # Your app's homepage.
  # Default is empty.
  homepage: "https://github.com/roma-glushko/tango"

  # Your app's description.
  # Default is empty.
  description: "Tango is a dependency-free command-line tool for analyzing server access logs"

  # Your app's license
  # Default is empty.
  license: MIT

  # Persist data between application updates
  persist:
  - "data"
  - "config.toml"